plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.programmers'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Thymelaf Layout Dialect 설정
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'

	//SpringBootSecurity 설정
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//SpringBoot Validation 설정
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//SpringBootSecurity 테스트 설정
	testImplementation 'org.springframework.security:spring-security-test'

	//Thymelaf-extras-springsecurity5 설정
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'

	//modelmappler 라이브러리 설정
	implementation 'org.modelmapper:modelmapper:3.1.0'

	compileOnly 'org.projectlombok:lombok'
	//spring-boot-devtools 설정
	compileOnly("org.springframework.boot:spring-boot-devtools")

	//QueryDSL 설정
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	implementation 'com.querydsl:querydsl-apt:5.0.0'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

//한글 깨짐 방지
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.withType(GroovyCompile) {
	options.encoding = 'UTF-8'
}

def querydslDir =  "target/generated-sources/java"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslDefault = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}